/*!------------------------------------------------
@brief タスク管理クラスヘッダ
@note　各タスクを登録、実行する
@author
-------------------------------------------------*/
#ifndef TASK_CONTROL_H
#define TASK_CONTROL_H
#include "BaseTask.h"

/*!------------------------------------------------
@brief タスク制御クラス
@note　タスク登録、実行
@author
-------------------------------------------------*/
class TaskControl
{
    BaseTask** _pTask;          //!< タスククラスポインタ　1次元配列
    uint32_t _maxTask;          //!< タスク最大数
    uint32_t _taskIndex;        //!< タスク登録数
    uint32_t _isTimerEnabled;   //!< タイマー有効／無効（FATAL_ERROR 発生時は、無効とする）

public:
    
    /*!------------------------------------------------
    @brief コンストラクタ
    -------------------------------------------------*/
    TaskControl(uint32_t);

    /*!------------------------------------------------
    @brief 登録タスク実行
    -------------------------------------------------*/
    void DoTask(void);
    
    /*!------------------------------------------------
    @brief タイマーカウント
    -------------------------------------------------*/
    void TimerCount(void);

    /*!------------------------------------------------
    @brief タイマーカウント強制停止（FATAL ERROR 発生時にセット
    -------------------------------------------------*/
    void StopForceTimerCount() { _isTimerEnabled = OFF; }

    /*!------------------------------------------------
    @brief タスク登録
    -------------------------------------------------*/
    TYPE_ERROR AddTask(BaseTask* pTask);

};
#endif

